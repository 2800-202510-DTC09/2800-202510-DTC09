import {status} from 'http-status';
import {Error} from 'mongoose';
import {Goal, normalize} from '../../model/goal.mjs';
import {User} from '../../model/user.mjs';
import {goal} from './index.mjs';

/**
 * Create openAPI doc.
 * Generated by ChatGPT 4.0
 *
 * @author https://chat.openai.com/
 */
goal.post('/', async (req, res) => {
    try {
        const userId = req.session?.user?.id;
        if (!userId) return res.sendStatus(status.UNAUTHORIZED);

        const existingGoal = await Goal.findOne({
            user: userId,
            name: req.body.name,
            $or: [
                {deletedAt: {$exists: false}},
                {deletedAt: null},
                {deletedAt: {$gt: Date.now()}},
            ],
        });

        if (existingGoal) {
            return res.status(status.BAD_REQUEST).json({
                error: existingGoal.completed
                    ? 'You have already completed this goal'
                    : 'You already have this goal active',
            });
        }

        const goalData = Object.fromEntries(
            [
                'name',
                'description',
                'icon',
                'emission',
                'emissionDiff',
                'emissionDiffStart',
                'emissionDiffEnd',
                'scorePoints',
                'durationDays',
                'badge',
            ].map((v) => [v, req.body[v]]),
        );
        goalData.user = userId;

        const newGoal = await new Goal(goalData).save();

        await User.findByIdAndUpdate(userId, {
            $push: {goals: newGoal._id},
        });

        return res.status(status.OK).json(normalize(newGoal).pop());
    } catch (e) {
        if (e.name === Error.ValidationError.name) {
            return res.status(status.BAD_REQUEST).json(e.errors);
        }
        console.error(e);
        return res.sendStatus(status.INTERNAL_SERVER_ERROR);
    }
});

import {status} from 'http-status';
import {Goal} from '../../model/goal.mjs';
import {User} from '../../model/user.mjs';
import {goal} from './index.mjs';
/**
 * Create openAPI doc.
 * Generated by ChatGPT 4.0
 *
 * @author https://chat.openai.com/
 */

// This endpoint allows a user to mark a goal as completed.
goal.post('/:id/complete', async (req, res) => {
    try {
        const userId = req.session?.user?.id;
        if (!userId) return res.sendStatus(status.UNAUTHORIZED);

        const foundGoal = await Goal.findById(req.params.id).populate('badge');
        if (!foundGoal) return res.sendStatus(status.NOT_FOUND);

        const user = await User.findById(userId);
        if (!user) return res.sendStatus(status.UNAUTHORIZED);

        // Update score
        user.score = (user.score || 0) + (foundGoal.scorePoints || 0);

        // Add badge if it exists and hasn't already been earned
        const badgeId = foundGoal.badge?._id?.toString();
        if (badgeId && !user.badges.some((b) => b.toString() === badgeId)) {
            user.badges.push(badgeId);
        }

        await user.save();

        // Mark goal as completed
        await Goal.findByIdAndUpdate(req.params.id, {completed: true});

        return res
            .status(status.OK)
            .json({success: true, goalId: foundGoal.id});
    } catch (e) {
        console.error('Error completing goal:', e);
        return res.sendStatus(status.INTERNAL_SERVER_ERROR);
    }
});
